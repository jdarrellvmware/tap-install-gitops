#@ load("/values.star", "values")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:json", "json")
#@ load("@ytt:data", "data")
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tanzunet-config
  namespace: build-service
data:
  tanzunetUrl: "https://network.tanzu.vmware.com"
  tanzunetRegistry: "registry.tanzu.vmware.com"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dependency-updater-controller
  namespace: build-service
  labels:
    app: dependency-updater
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dependency-updater
  template:
    metadata:
      labels:
        app: dependency-updater
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: dependency-updater-controller-serviceaccount
      nodeSelector:
        kubernetes.io/os: linux
      imagePullSecrets:
        - name: tbs-install-pull-secret
      #@ if data.values.ca_cert_data != "":
      initContainers:
        - env:
          - name: CA_CERTS_DATA
            value: #@ data.values.ca_cert_data
          #@ if values.http_proxy != None:
          - name: HTTP_PROXY
            value: #@ values.http_proxy
          #@ end
          #@ if values.https_proxy != None:
          - name: HTTPS_PROXY
            value: #@ values.https_proxy
          #@ end
          #@ if values.no_proxy != None:
          - name: NO_PROXY
            value: #@ values.no_proxy
          #@ end
          image: setup-ca-certs
          imagePullPolicy: IfNotPresent
          name: setup-ca-certs
          volumeMounts:
            - name: ca-certs
              mountPath: /workspace
          workingDir: /workspace
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
      #@ end
      containers:
        - name: server
          image: dependency-updater
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          env:
          - name: TANZUNET_URL
            valueFrom:
              configMapKeyRef:
                name: tanzunet-config
                key: tanzunetUrl
          - name: TANZUNET_REGISTRY
            valueFrom:
              configMapKeyRef:
                name: tanzunet-config
                key: tanzunetRegistry
          #@ if values.http_proxy != None:
          - name: HTTP_PROXY
            value: #@ values.http_proxy
          #@ end
          #@ if values.https_proxy != None:
          - name: HTTPS_PROXY
            value: #@ values.https_proxy
          #@ end
          #@ if values.no_proxy != None:
          - name: NO_PROXY
            value: #@ values.no_proxy
          #@ end
          #@ if data.values.ca_cert_data != "":
          volumeMounts:
            - name: ca-certs
              mountPath: /etc/ssl/certs
              readOnly: true
          #@ end
      #@ if data.values.ca_cert_data != "":
      volumes:
        - name: ca-certs
          emptyDir: {}
      #@ end
