#@ load("/values.star", "values")
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dependency-updater-controller-serviceaccount
  namespace: build-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: build-service-dependency-updater-role
rules:
- apiGroups:
  - "buildservice.tanzu.vmware.com"
  resources:
  - tanzunetdependencyupdaters
  - tanzunetdependencyupdaters/status
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - update
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - secrets
  verbs:
  - get
- apiGroups:
  - "kpack.io"
  resources:
  - clusterstores
  - clusterstacks
  - clusterbuilders
  verbs:
  - get
  - list
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: build-service-dependency-updater-kp-config-role
  namespace: kpack
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceNames:
  - "kp-config"
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceNames:
  - "lifecycle-image"
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: build-service-dependency-updater-role-binding
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: build-service-dependency-updater-role
subjects:
- kind: ServiceAccount
  name: dependency-updater-controller-serviceaccount
  namespace: build-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: build-service-dependency-updater-kp-config-role-binding
  namespace: kpack
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: build-service-dependency-updater-kp-config-role
subjects:
  - kind: ServiceAccount
    name: dependency-updater-controller-serviceaccount
    namespace: build-service